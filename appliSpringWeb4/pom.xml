<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.14</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.inetum</groupId>
	<artifactId>appliSpringWeb4</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>appliSpringWeb4</name>
	<description>appli Spring Boot avec securite</description>
	<properties>
		<java.version>17</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	<dependencies>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		
		<!--
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		-->
		<!-- 
		NB: la dependance spring-boot-starter-security
		    comporte une securité par défaut pour SpringMVC à l'ancienne (JSP/thymeleaf)
		    avec "user" et mot de passe généré au démarrage
		    ça ne convient pas au besoin "securiser WS REST/JSON" pas de token JWT
		-->
		
		<dependency>
			<groupId>org.mycontrib</groupId>
			<artifactId>my-security-starter</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>
		
		<!-- 
		ATTENTION: si my-security-starter , 
		besoin préalable de déclencher "mvn install" sur les projets annexes:
		my-security , my-security-configure , my-security-starter
		et besoin d'activer le profile spring "withSecurity" dans main() ou ailleurs
		et besoin de configurer src/main/resources/application-withSecurity.properties
		-->
		

		<dependency>
			<!-- driver jdbc pour base h2 -->
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<!-- pas de scope=test aujourd'hui -->
			<version>2.2.220</version>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.28</version>
		</dependency>

		<dependency>
			<groupId>com.oracle.database.jdbc</groupId>
			<artifactId>ojdbc11</artifactId>
			<!-- <version>21.5.0.0</version> -->
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>1.7.0</version>
		</dependency>


		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>
		<!-- 
		pour que lombok fonctionne bien dans eclipse:
		 1. lancer (via double click ou autre)
		C:\Users\Administrateur\.m2\repository\org\projectlombok\lombok\1.18.28\lombok...jar
		 2. spécifier le chemin menant à eclipse
		 3. "install/update"  eclipse.ini mis à jour
		 4. redémarrer eclipse et clean ..
		-->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- spring-boot-devtools permet de redemarrer l'appli springBoot
		     en phase de dev des que que code java a changé -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
