package com.inetum.appliSpringWeb;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.provisioning.InMemoryUserDetailsManager;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
@EnableWebSecurity
public class SecurityConfig {
	
	@Bean 
	public PasswordEncoder passwordEncoder() { 
	    return new BCryptPasswordEncoder(); 
	}
	
	@Bean
    public InMemoryUserDetailsManager userDetailsService() {
		 UserDetails user1 = User.withUsername("user1")
		            .password(passwordEncoder().encode("pwd1"))
		            .roles("USER")
		            .build();
		        UserDetails user2 = User.withUsername("user2")
		            .password(passwordEncoder().encode("pwd2"))
		            .roles("USER")
		            .build();
		        UserDetails admin = User.withUsername("admin1")
		            .password(passwordEncoder().encode("pwd1"))
		            .roles("ADMIN")
		            .build();
		        return new InMemoryUserDetailsManager(user1, user2, admin);
    }

    @Bean
    public SecurityFilterChain filterChain(HttpSecurity http) throws Exception {
    	http.csrf().disable()
        .authorizeRequests()
        .antMatchers("/admin/**").hasRole("ADMIN")
        .antMatchers("/site/**").hasRole("USER")
        .antMatchers("/login*").permitAll()
        .anyRequest().authenticated()
        .and().formLogin();
        //.loginPage("/login.html")
        //.loginProcessingUrl("/perform_login")
        //.defaultSuccessUrl("/homepage.html", true)
        //.failureUrl("/login.html?error=true")
        //.failureHandler(authenticationFailureHandler())
        //.and()
        //.logout()
        //.logoutUrl("/perform_logout")
        //.deleteCookies("JSESSIONID");
        //.logoutSuccessHandler(logoutSuccessHandler());
        return http.build();
    }

}
